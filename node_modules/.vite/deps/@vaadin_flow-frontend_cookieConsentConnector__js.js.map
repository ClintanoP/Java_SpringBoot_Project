{
  "version": 3,
  "sources": ["../../@vaadin/flow-frontend/cookieConsentConnector.js", "dep:@vaadin_flow-frontend_cookieConsentConnector__js"],
  "sourcesContent": ["(function () {\n  function copyClassName(consent) {\n    const popup = consent._getPopup();\n    if (popup) {\n      popup.className = consent.className;\n    }\n  }\n\n  const observer = new MutationObserver((records) => {\n    records.forEach((mutation) => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n        copyClassName(mutation.target);\n      }\n    });\n  });\n\n  window.Vaadin.Flow.cookieConsentConnector = {\n    initLazy: function (consent) {\n      if (consent.$connector) {\n        return;\n      }\n\n      consent.$connector = {};\n\n      observer.observe(consent, {\n        attributes: true,\n        attributeFilter: ['class']\n      });\n\n      copyClassName(consent);\n    }\n  };\n})();\n", "export default require(\"../node_modules/@vaadin/flow-frontend/cookieConsentConnector.js\");"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,KAAC,WAAY;AACX,eAAS,cAAc,SAAS;AAC9B,cAAM,QAAQ,QAAQ,UAAU;AAChC,YAAI,OAAO;AACT,gBAAM,YAAY,QAAQ;AAAA,QAC5B;AAAA,MACF;AAEA,YAAM,WAAW,IAAI,iBAAiB,CAAC,YAAY;AACjD,gBAAQ,QAAQ,CAAC,aAAa;AAC5B,cAAI,SAAS,SAAS,gBAAgB,SAAS,kBAAkB,SAAS;AACxE,0BAAc,SAAS,MAAM;AAAA,UAC/B;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAED,aAAO,OAAO,KAAK,yBAAyB;AAAA,QAC1C,UAAU,SAAU,SAAS;AAC3B,cAAI,QAAQ,YAAY;AACtB;AAAA,UACF;AAEA,kBAAQ,aAAa,CAAC;AAEtB,mBAAS,QAAQ,SAAS;AAAA,YACxB,YAAY;AAAA,YACZ,iBAAiB,CAAC,OAAO;AAAA,UAC3B,CAAC;AAED,wBAAc,OAAO;AAAA,QACvB;AAAA,MACF;AAAA,IACF,GAAG;AAAA;AAAA;;;AChCH,IAAO,yDAAQ;",
  "names": []
}
